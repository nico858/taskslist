openapi: 3.0.3
info:
  title: SocialMedia
  description: 'Social media app from NodeJS'
  # termsOfService: http://swagger.io/terms/
  contact:
    email: nicolasurbanos10@gmail.com
  version: 1.0.11
# externalDocs:
#   description: Find out more about the developer
#   url: http://swagger.io
servers:
  - url: https://localhost:4000/
tags:
  - name: task
    description: Operations about task
paths:
  /tasks:
    post:
      tags:
        - task
      summary: Create a task
      description: Here you can create a new task.
      operationId: createTask
      requestBody:
        description: Show tasks objects
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
            application/xml:
              schema:
                $ref: '#/components/schemas/Task'
    /:
    get:
      tags:
        - task
      summary: Show your tasks
      description: 'Here you can see all your tasks'
      operationId: getAllTasks
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /tasks/{id}:
    put:
      tags:
        - task
      summary: Edit a task
      description: Here you can edit any of your tasks.
      operationId: updateTask
      parameters:
        - name: id
          in: path
          description: Id ofthe task will be edited
          required: true
          schema:
            type: integer
      requestBody:
        description: Update an existent task in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        default:
          description: successful operation
  /tasks/{id}:
    delete:
      tags:
        - task
      summary: Delete a task
      description: Here you can delete one of your tasks.
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: The id of the task that will be deleted
          required: true
          schema:
            type: string
      responses:
        default: succesful operation
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: Phisic homework
        description:
          type: string
          example: I have to calculate the acceleration of a car.
      xml:
        name: task
  requestBodies:
    UserArray:
      description: List of taks object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Task'
